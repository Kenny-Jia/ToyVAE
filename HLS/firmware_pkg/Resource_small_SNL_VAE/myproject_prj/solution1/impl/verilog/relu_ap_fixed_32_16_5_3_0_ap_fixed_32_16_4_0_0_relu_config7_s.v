// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_relu_config7_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        data_4_V_read,
        data_5_V_read,
        data_6_V_read,
        data_7_V_read,
        data_8_V_read,
        data_9_V_read,
        data_10_V_read,
        data_11_V_read,
        data_12_V_read,
        data_13_V_read,
        data_14_V_read,
        data_15_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] data_0_V_read;
input  [31:0] data_1_V_read;
input  [31:0] data_2_V_read;
input  [31:0] data_3_V_read;
input  [31:0] data_4_V_read;
input  [31:0] data_5_V_read;
input  [31:0] data_6_V_read;
input  [31:0] data_7_V_read;
input  [31:0] data_8_V_read;
input  [31:0] data_9_V_read;
input  [31:0] data_10_V_read;
input  [31:0] data_11_V_read;
input  [31:0] data_12_V_read;
input  [31:0] data_13_V_read;
input  [31:0] data_14_V_read;
input  [31:0] data_15_V_read;
output  [30:0] ap_return_0;
output  [30:0] ap_return_1;
output  [30:0] ap_return_2;
output  [30:0] ap_return_3;
output  [30:0] ap_return_4;
output  [30:0] ap_return_5;
output  [30:0] ap_return_6;
output  [30:0] ap_return_7;
output  [30:0] ap_return_8;
output  [30:0] ap_return_9;
output  [30:0] ap_return_10;
output  [30:0] ap_return_11;
output  [30:0] ap_return_12;
output  [30:0] ap_return_13;
output  [30:0] ap_return_14;
output  [30:0] ap_return_15;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[30:0] ap_return_0;
reg[30:0] ap_return_1;
reg[30:0] ap_return_2;
reg[30:0] ap_return_3;
reg[30:0] ap_return_4;
reg[30:0] ap_return_5;
reg[30:0] ap_return_6;
reg[30:0] ap_return_7;
reg[30:0] ap_return_8;
reg[30:0] ap_return_9;
reg[30:0] ap_return_10;
reg[30:0] ap_return_11;
reg[30:0] ap_return_12;
reg[30:0] ap_return_13;
reg[30:0] ap_return_14;
reg[30:0] ap_return_15;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1;
wire   [0:0] icmp_ln1494_fu_148_p2;
wire   [30:0] trunc_ln1494_fu_144_p1;
wire   [0:0] icmp_ln1494_1_fu_166_p2;
wire   [30:0] trunc_ln1494_1_fu_162_p1;
wire   [0:0] icmp_ln1494_2_fu_184_p2;
wire   [30:0] trunc_ln1494_2_fu_180_p1;
wire   [0:0] icmp_ln1494_3_fu_202_p2;
wire   [30:0] trunc_ln1494_3_fu_198_p1;
wire   [0:0] icmp_ln1494_4_fu_220_p2;
wire   [30:0] trunc_ln1494_4_fu_216_p1;
wire   [0:0] icmp_ln1494_5_fu_238_p2;
wire   [30:0] trunc_ln1494_5_fu_234_p1;
wire   [0:0] icmp_ln1494_6_fu_256_p2;
wire   [30:0] trunc_ln1494_6_fu_252_p1;
wire   [0:0] icmp_ln1494_7_fu_274_p2;
wire   [30:0] trunc_ln1494_7_fu_270_p1;
wire   [0:0] icmp_ln1494_8_fu_292_p2;
wire   [30:0] trunc_ln1494_8_fu_288_p1;
wire   [0:0] icmp_ln1494_9_fu_310_p2;
wire   [30:0] trunc_ln1494_9_fu_306_p1;
wire   [0:0] icmp_ln1494_10_fu_328_p2;
wire   [30:0] trunc_ln1494_10_fu_324_p1;
wire   [0:0] icmp_ln1494_11_fu_346_p2;
wire   [30:0] trunc_ln1494_11_fu_342_p1;
wire   [0:0] icmp_ln1494_12_fu_364_p2;
wire   [30:0] trunc_ln1494_12_fu_360_p1;
wire   [0:0] icmp_ln1494_13_fu_382_p2;
wire   [30:0] trunc_ln1494_13_fu_378_p1;
wire   [0:0] icmp_ln1494_14_fu_400_p2;
wire   [30:0] trunc_ln1494_14_fu_396_p1;
wire   [0:0] icmp_ln1494_15_fu_418_p2;
wire   [30:0] trunc_ln1494_15_fu_414_p1;
wire   [30:0] select_ln45_fu_154_p3;
wire   [30:0] select_ln45_1_fu_172_p3;
wire   [30:0] select_ln45_2_fu_190_p3;
wire   [30:0] select_ln45_3_fu_208_p3;
wire   [30:0] select_ln45_4_fu_226_p3;
wire   [30:0] select_ln45_5_fu_244_p3;
wire   [30:0] select_ln45_6_fu_262_p3;
wire   [30:0] select_ln45_7_fu_280_p3;
wire   [30:0] select_ln45_8_fu_298_p3;
wire   [30:0] select_ln45_9_fu_316_p3;
wire   [30:0] select_ln45_10_fu_334_p3;
wire   [30:0] select_ln45_11_fu_352_p3;
wire   [30:0] select_ln45_12_fu_370_p3;
wire   [30:0] select_ln45_13_fu_388_p3;
wire   [30:0] select_ln45_14_fu_406_p3;
wire   [30:0] select_ln45_15_fu_424_p3;
reg   [30:0] ap_return_0_preg;
reg   [30:0] ap_return_1_preg;
reg   [30:0] ap_return_2_preg;
reg   [30:0] ap_return_3_preg;
reg   [30:0] ap_return_4_preg;
reg   [30:0] ap_return_5_preg;
reg   [30:0] ap_return_6_preg;
reg   [30:0] ap_return_7_preg;
reg   [30:0] ap_return_8_preg;
reg   [30:0] ap_return_9_preg;
reg   [30:0] ap_return_10_preg;
reg   [30:0] ap_return_11_preg;
reg   [30:0] ap_return_12_preg;
reg   [30:0] ap_return_13_preg;
reg   [30:0] ap_return_14_preg;
reg   [30:0] ap_return_15_preg;
reg   [0:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_return_0_preg = 31'd0;
#0 ap_return_1_preg = 31'd0;
#0 ap_return_2_preg = 31'd0;
#0 ap_return_3_preg = 31'd0;
#0 ap_return_4_preg = 31'd0;
#0 ap_return_5_preg = 31'd0;
#0 ap_return_6_preg = 31'd0;
#0 ap_return_7_preg = 31'd0;
#0 ap_return_8_preg = 31'd0;
#0 ap_return_9_preg = 31'd0;
#0 ap_return_10_preg = 31'd0;
#0 ap_return_11_preg = 31'd0;
#0 ap_return_12_preg = 31'd0;
#0 ap_return_13_preg = 31'd0;
#0 ap_return_14_preg = 31'd0;
#0 ap_return_15_preg = 31'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_0_preg <= select_ln45_fu_154_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_10_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_10_preg <= select_ln45_10_fu_334_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_11_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_11_preg <= select_ln45_11_fu_352_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_12_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_12_preg <= select_ln45_12_fu_370_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_13_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_13_preg <= select_ln45_13_fu_388_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_14_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_14_preg <= select_ln45_14_fu_406_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_15_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_15_preg <= select_ln45_15_fu_424_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_1_preg <= select_ln45_1_fu_172_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_2_preg <= select_ln45_2_fu_190_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_3_preg <= select_ln45_3_fu_208_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_4_preg <= select_ln45_4_fu_226_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_5_preg <= select_ln45_5_fu_244_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_6_preg <= select_ln45_6_fu_262_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_7_preg <= select_ln45_7_fu_280_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_8_preg <= select_ln45_8_fu_298_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_9_preg <= select_ln45_9_fu_316_p3;
        end
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_0 = select_ln45_fu_154_p3;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_1 = select_ln45_1_fu_172_p3;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_10 = select_ln45_10_fu_334_p3;
    end else begin
        ap_return_10 = ap_return_10_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_11 = select_ln45_11_fu_352_p3;
    end else begin
        ap_return_11 = ap_return_11_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_12 = select_ln45_12_fu_370_p3;
    end else begin
        ap_return_12 = ap_return_12_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_13 = select_ln45_13_fu_388_p3;
    end else begin
        ap_return_13 = ap_return_13_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_14 = select_ln45_14_fu_406_p3;
    end else begin
        ap_return_14 = ap_return_14_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_15 = select_ln45_15_fu_424_p3;
    end else begin
        ap_return_15 = ap_return_15_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_2 = select_ln45_2_fu_190_p3;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_3 = select_ln45_3_fu_208_p3;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_4 = select_ln45_4_fu_226_p3;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_5 = select_ln45_5_fu_244_p3;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_6 = select_ln45_6_fu_262_p3;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_7 = select_ln45_7_fu_280_p3;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_8 = select_ln45_8_fu_298_p3;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_9 = select_ln45_9_fu_316_p3;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign icmp_ln1494_10_fu_328_p2 = (($signed(data_10_V_read) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_11_fu_346_p2 = (($signed(data_11_V_read) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_12_fu_364_p2 = (($signed(data_12_V_read) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_13_fu_382_p2 = (($signed(data_13_V_read) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_14_fu_400_p2 = (($signed(data_14_V_read) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_15_fu_418_p2 = (($signed(data_15_V_read) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_1_fu_166_p2 = (($signed(data_1_V_read) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_2_fu_184_p2 = (($signed(data_2_V_read) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_3_fu_202_p2 = (($signed(data_3_V_read) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_4_fu_220_p2 = (($signed(data_4_V_read) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_5_fu_238_p2 = (($signed(data_5_V_read) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_6_fu_256_p2 = (($signed(data_6_V_read) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_7_fu_274_p2 = (($signed(data_7_V_read) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_8_fu_292_p2 = (($signed(data_8_V_read) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_9_fu_310_p2 = (($signed(data_9_V_read) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_148_p2 = (($signed(data_0_V_read) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign select_ln45_10_fu_334_p3 = ((icmp_ln1494_10_fu_328_p2[0:0] === 1'b1) ? trunc_ln1494_10_fu_324_p1 : 31'd0);

assign select_ln45_11_fu_352_p3 = ((icmp_ln1494_11_fu_346_p2[0:0] === 1'b1) ? trunc_ln1494_11_fu_342_p1 : 31'd0);

assign select_ln45_12_fu_370_p3 = ((icmp_ln1494_12_fu_364_p2[0:0] === 1'b1) ? trunc_ln1494_12_fu_360_p1 : 31'd0);

assign select_ln45_13_fu_388_p3 = ((icmp_ln1494_13_fu_382_p2[0:0] === 1'b1) ? trunc_ln1494_13_fu_378_p1 : 31'd0);

assign select_ln45_14_fu_406_p3 = ((icmp_ln1494_14_fu_400_p2[0:0] === 1'b1) ? trunc_ln1494_14_fu_396_p1 : 31'd0);

assign select_ln45_15_fu_424_p3 = ((icmp_ln1494_15_fu_418_p2[0:0] === 1'b1) ? trunc_ln1494_15_fu_414_p1 : 31'd0);

assign select_ln45_1_fu_172_p3 = ((icmp_ln1494_1_fu_166_p2[0:0] === 1'b1) ? trunc_ln1494_1_fu_162_p1 : 31'd0);

assign select_ln45_2_fu_190_p3 = ((icmp_ln1494_2_fu_184_p2[0:0] === 1'b1) ? trunc_ln1494_2_fu_180_p1 : 31'd0);

assign select_ln45_3_fu_208_p3 = ((icmp_ln1494_3_fu_202_p2[0:0] === 1'b1) ? trunc_ln1494_3_fu_198_p1 : 31'd0);

assign select_ln45_4_fu_226_p3 = ((icmp_ln1494_4_fu_220_p2[0:0] === 1'b1) ? trunc_ln1494_4_fu_216_p1 : 31'd0);

assign select_ln45_5_fu_244_p3 = ((icmp_ln1494_5_fu_238_p2[0:0] === 1'b1) ? trunc_ln1494_5_fu_234_p1 : 31'd0);

assign select_ln45_6_fu_262_p3 = ((icmp_ln1494_6_fu_256_p2[0:0] === 1'b1) ? trunc_ln1494_6_fu_252_p1 : 31'd0);

assign select_ln45_7_fu_280_p3 = ((icmp_ln1494_7_fu_274_p2[0:0] === 1'b1) ? trunc_ln1494_7_fu_270_p1 : 31'd0);

assign select_ln45_8_fu_298_p3 = ((icmp_ln1494_8_fu_292_p2[0:0] === 1'b1) ? trunc_ln1494_8_fu_288_p1 : 31'd0);

assign select_ln45_9_fu_316_p3 = ((icmp_ln1494_9_fu_310_p2[0:0] === 1'b1) ? trunc_ln1494_9_fu_306_p1 : 31'd0);

assign select_ln45_fu_154_p3 = ((icmp_ln1494_fu_148_p2[0:0] === 1'b1) ? trunc_ln1494_fu_144_p1 : 31'd0);

assign trunc_ln1494_10_fu_324_p1 = data_10_V_read[30:0];

assign trunc_ln1494_11_fu_342_p1 = data_11_V_read[30:0];

assign trunc_ln1494_12_fu_360_p1 = data_12_V_read[30:0];

assign trunc_ln1494_13_fu_378_p1 = data_13_V_read[30:0];

assign trunc_ln1494_14_fu_396_p1 = data_14_V_read[30:0];

assign trunc_ln1494_15_fu_414_p1 = data_15_V_read[30:0];

assign trunc_ln1494_1_fu_162_p1 = data_1_V_read[30:0];

assign trunc_ln1494_2_fu_180_p1 = data_2_V_read[30:0];

assign trunc_ln1494_3_fu_198_p1 = data_3_V_read[30:0];

assign trunc_ln1494_4_fu_216_p1 = data_4_V_read[30:0];

assign trunc_ln1494_5_fu_234_p1 = data_5_V_read[30:0];

assign trunc_ln1494_6_fu_252_p1 = data_6_V_read[30:0];

assign trunc_ln1494_7_fu_270_p1 = data_7_V_read[30:0];

assign trunc_ln1494_8_fu_288_p1 = data_8_V_read[30:0];

assign trunc_ln1494_9_fu_306_p1 = data_9_V_read[30:0];

assign trunc_ln1494_fu_144_p1 = data_0_V_read[30:0];

endmodule //relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_relu_config7_s
