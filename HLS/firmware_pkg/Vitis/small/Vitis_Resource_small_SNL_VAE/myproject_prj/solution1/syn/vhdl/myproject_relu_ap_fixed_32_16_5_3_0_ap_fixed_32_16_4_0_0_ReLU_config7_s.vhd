-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read8 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read9 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read10 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read11 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read12 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read13 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read14 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read15 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (30 downto 0) );
end;


architecture behav of myproject_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal icmp_ln45_fu_146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln42_fu_142_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln45_1_fu_164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln42_1_fu_160_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln45_2_fu_182_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln42_2_fu_178_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln45_3_fu_200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln42_3_fu_196_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln45_4_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln42_4_fu_214_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln45_5_fu_236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln42_5_fu_232_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln45_6_fu_254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln42_6_fu_250_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln45_7_fu_272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln42_7_fu_268_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln45_8_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln42_8_fu_286_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln45_9_fu_308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln42_9_fu_304_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln45_10_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln42_10_fu_322_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln45_11_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln42_11_fu_340_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln45_12_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln42_12_fu_358_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln45_13_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln42_13_fu_376_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln45_14_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln42_14_fu_394_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln45_15_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln42_15_fu_412_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal datareg_fu_152_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal datareg_1_fu_170_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal datareg_2_fu_188_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal datareg_3_fu_206_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal datareg_4_fu_224_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal datareg_5_fu_242_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal datareg_6_fu_260_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal datareg_7_fu_278_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal datareg_8_fu_296_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal datareg_9_fu_314_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal datareg_10_fu_332_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal datareg_11_fu_350_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal datareg_12_fu_368_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal datareg_13_fu_386_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal datareg_14_fu_404_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal datareg_15_fu_422_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_2_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_3_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_4_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_5_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_6_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_7_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_8_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_9_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_10_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_11_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_12_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_13_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_14_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_15_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_0_preg <= datareg_fu_152_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_10_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_10_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_10_preg <= datareg_10_fu_332_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_11_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_11_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_11_preg <= datareg_11_fu_350_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_12_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_12_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_12_preg <= datareg_12_fu_368_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_13_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_13_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_13_preg <= datareg_13_fu_386_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_14_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_14_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_14_preg <= datareg_14_fu_404_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_15_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_15_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_15_preg <= datareg_15_fu_422_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_1_preg <= datareg_1_fu_170_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_2_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_2_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_2_preg <= datareg_2_fu_188_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_3_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_3_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_3_preg <= datareg_3_fu_206_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_4_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_4_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_4_preg <= datareg_4_fu_224_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_5_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_5_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_5_preg <= datareg_5_fu_242_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_6_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_6_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_6_preg <= datareg_6_fu_260_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_7_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_7_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_7_preg <= datareg_7_fu_278_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_8_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_8_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_8_preg <= datareg_8_fu_296_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_9_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_9_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_9_preg <= datareg_9_fu_314_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, datareg_fu_152_p3, ap_return_0_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_0 <= datareg_fu_152_p3;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, datareg_1_fu_170_p3, ap_return_1_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_1 <= datareg_1_fu_170_p3;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    ap_return_10_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, datareg_10_fu_332_p3, ap_return_10_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_10 <= datareg_10_fu_332_p3;
        else 
            ap_return_10 <= ap_return_10_preg;
        end if; 
    end process;


    ap_return_11_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, datareg_11_fu_350_p3, ap_return_11_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_11 <= datareg_11_fu_350_p3;
        else 
            ap_return_11 <= ap_return_11_preg;
        end if; 
    end process;


    ap_return_12_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, datareg_12_fu_368_p3, ap_return_12_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_12 <= datareg_12_fu_368_p3;
        else 
            ap_return_12 <= ap_return_12_preg;
        end if; 
    end process;


    ap_return_13_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, datareg_13_fu_386_p3, ap_return_13_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_13 <= datareg_13_fu_386_p3;
        else 
            ap_return_13 <= ap_return_13_preg;
        end if; 
    end process;


    ap_return_14_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, datareg_14_fu_404_p3, ap_return_14_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_14 <= datareg_14_fu_404_p3;
        else 
            ap_return_14 <= ap_return_14_preg;
        end if; 
    end process;


    ap_return_15_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, datareg_15_fu_422_p3, ap_return_15_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_15 <= datareg_15_fu_422_p3;
        else 
            ap_return_15 <= ap_return_15_preg;
        end if; 
    end process;


    ap_return_2_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, datareg_2_fu_188_p3, ap_return_2_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_2 <= datareg_2_fu_188_p3;
        else 
            ap_return_2 <= ap_return_2_preg;
        end if; 
    end process;


    ap_return_3_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, datareg_3_fu_206_p3, ap_return_3_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_3 <= datareg_3_fu_206_p3;
        else 
            ap_return_3 <= ap_return_3_preg;
        end if; 
    end process;


    ap_return_4_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, datareg_4_fu_224_p3, ap_return_4_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_4 <= datareg_4_fu_224_p3;
        else 
            ap_return_4 <= ap_return_4_preg;
        end if; 
    end process;


    ap_return_5_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, datareg_5_fu_242_p3, ap_return_5_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_5 <= datareg_5_fu_242_p3;
        else 
            ap_return_5 <= ap_return_5_preg;
        end if; 
    end process;


    ap_return_6_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, datareg_6_fu_260_p3, ap_return_6_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_6 <= datareg_6_fu_260_p3;
        else 
            ap_return_6 <= ap_return_6_preg;
        end if; 
    end process;


    ap_return_7_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, datareg_7_fu_278_p3, ap_return_7_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_7 <= datareg_7_fu_278_p3;
        else 
            ap_return_7 <= ap_return_7_preg;
        end if; 
    end process;


    ap_return_8_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, datareg_8_fu_296_p3, ap_return_8_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_8 <= datareg_8_fu_296_p3;
        else 
            ap_return_8 <= ap_return_8_preg;
        end if; 
    end process;


    ap_return_9_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, datareg_9_fu_314_p3, ap_return_9_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_9 <= datareg_9_fu_314_p3;
        else 
            ap_return_9 <= ap_return_9_preg;
        end if; 
    end process;

    datareg_10_fu_332_p3 <= 
        trunc_ln42_10_fu_322_p1 when (icmp_ln45_10_fu_326_p2(0) = '1') else 
        ap_const_lv31_0;
    datareg_11_fu_350_p3 <= 
        trunc_ln42_11_fu_340_p1 when (icmp_ln45_11_fu_344_p2(0) = '1') else 
        ap_const_lv31_0;
    datareg_12_fu_368_p3 <= 
        trunc_ln42_12_fu_358_p1 when (icmp_ln45_12_fu_362_p2(0) = '1') else 
        ap_const_lv31_0;
    datareg_13_fu_386_p3 <= 
        trunc_ln42_13_fu_376_p1 when (icmp_ln45_13_fu_380_p2(0) = '1') else 
        ap_const_lv31_0;
    datareg_14_fu_404_p3 <= 
        trunc_ln42_14_fu_394_p1 when (icmp_ln45_14_fu_398_p2(0) = '1') else 
        ap_const_lv31_0;
    datareg_15_fu_422_p3 <= 
        trunc_ln42_15_fu_412_p1 when (icmp_ln45_15_fu_416_p2(0) = '1') else 
        ap_const_lv31_0;
    datareg_1_fu_170_p3 <= 
        trunc_ln42_1_fu_160_p1 when (icmp_ln45_1_fu_164_p2(0) = '1') else 
        ap_const_lv31_0;
    datareg_2_fu_188_p3 <= 
        trunc_ln42_2_fu_178_p1 when (icmp_ln45_2_fu_182_p2(0) = '1') else 
        ap_const_lv31_0;
    datareg_3_fu_206_p3 <= 
        trunc_ln42_3_fu_196_p1 when (icmp_ln45_3_fu_200_p2(0) = '1') else 
        ap_const_lv31_0;
    datareg_4_fu_224_p3 <= 
        trunc_ln42_4_fu_214_p1 when (icmp_ln45_4_fu_218_p2(0) = '1') else 
        ap_const_lv31_0;
    datareg_5_fu_242_p3 <= 
        trunc_ln42_5_fu_232_p1 when (icmp_ln45_5_fu_236_p2(0) = '1') else 
        ap_const_lv31_0;
    datareg_6_fu_260_p3 <= 
        trunc_ln42_6_fu_250_p1 when (icmp_ln45_6_fu_254_p2(0) = '1') else 
        ap_const_lv31_0;
    datareg_7_fu_278_p3 <= 
        trunc_ln42_7_fu_268_p1 when (icmp_ln45_7_fu_272_p2(0) = '1') else 
        ap_const_lv31_0;
    datareg_8_fu_296_p3 <= 
        trunc_ln42_8_fu_286_p1 when (icmp_ln45_8_fu_290_p2(0) = '1') else 
        ap_const_lv31_0;
    datareg_9_fu_314_p3 <= 
        trunc_ln42_9_fu_304_p1 when (icmp_ln45_9_fu_308_p2(0) = '1') else 
        ap_const_lv31_0;
    datareg_fu_152_p3 <= 
        trunc_ln42_fu_142_p1 when (icmp_ln45_fu_146_p2(0) = '1') else 
        ap_const_lv31_0;
    icmp_ln45_10_fu_326_p2 <= "1" when (signed(p_read10) > signed(ap_const_lv32_0)) else "0";
    icmp_ln45_11_fu_344_p2 <= "1" when (signed(p_read11) > signed(ap_const_lv32_0)) else "0";
    icmp_ln45_12_fu_362_p2 <= "1" when (signed(p_read12) > signed(ap_const_lv32_0)) else "0";
    icmp_ln45_13_fu_380_p2 <= "1" when (signed(p_read13) > signed(ap_const_lv32_0)) else "0";
    icmp_ln45_14_fu_398_p2 <= "1" when (signed(p_read14) > signed(ap_const_lv32_0)) else "0";
    icmp_ln45_15_fu_416_p2 <= "1" when (signed(p_read15) > signed(ap_const_lv32_0)) else "0";
    icmp_ln45_1_fu_164_p2 <= "1" when (signed(p_read1) > signed(ap_const_lv32_0)) else "0";
    icmp_ln45_2_fu_182_p2 <= "1" when (signed(p_read2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln45_3_fu_200_p2 <= "1" when (signed(p_read3) > signed(ap_const_lv32_0)) else "0";
    icmp_ln45_4_fu_218_p2 <= "1" when (signed(p_read4) > signed(ap_const_lv32_0)) else "0";
    icmp_ln45_5_fu_236_p2 <= "1" when (signed(p_read5) > signed(ap_const_lv32_0)) else "0";
    icmp_ln45_6_fu_254_p2 <= "1" when (signed(p_read6) > signed(ap_const_lv32_0)) else "0";
    icmp_ln45_7_fu_272_p2 <= "1" when (signed(p_read7) > signed(ap_const_lv32_0)) else "0";
    icmp_ln45_8_fu_290_p2 <= "1" when (signed(p_read8) > signed(ap_const_lv32_0)) else "0";
    icmp_ln45_9_fu_308_p2 <= "1" when (signed(p_read9) > signed(ap_const_lv32_0)) else "0";
    icmp_ln45_fu_146_p2 <= "1" when (signed(p_read) > signed(ap_const_lv32_0)) else "0";
    trunc_ln42_10_fu_322_p1 <= p_read10(31 - 1 downto 0);
    trunc_ln42_11_fu_340_p1 <= p_read11(31 - 1 downto 0);
    trunc_ln42_12_fu_358_p1 <= p_read12(31 - 1 downto 0);
    trunc_ln42_13_fu_376_p1 <= p_read13(31 - 1 downto 0);
    trunc_ln42_14_fu_394_p1 <= p_read14(31 - 1 downto 0);
    trunc_ln42_15_fu_412_p1 <= p_read15(31 - 1 downto 0);
    trunc_ln42_1_fu_160_p1 <= p_read1(31 - 1 downto 0);
    trunc_ln42_2_fu_178_p1 <= p_read2(31 - 1 downto 0);
    trunc_ln42_3_fu_196_p1 <= p_read3(31 - 1 downto 0);
    trunc_ln42_4_fu_214_p1 <= p_read4(31 - 1 downto 0);
    trunc_ln42_5_fu_232_p1 <= p_read5(31 - 1 downto 0);
    trunc_ln42_6_fu_250_p1 <= p_read6(31 - 1 downto 0);
    trunc_ln42_7_fu_268_p1 <= p_read7(31 - 1 downto 0);
    trunc_ln42_8_fu_286_p1 <= p_read8(31 - 1 downto 0);
    trunc_ln42_9_fu_304_p1 <= p_read9(31 - 1 downto 0);
    trunc_ln42_fu_142_p1 <= p_read(31 - 1 downto 0);
end behav;
