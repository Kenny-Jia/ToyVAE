// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] p_read;
input  [31:0] p_read1;
input  [31:0] p_read2;
input  [31:0] p_read3;
input  [31:0] p_read4;
input  [31:0] p_read5;
input  [31:0] p_read6;
input  [31:0] p_read7;
input  [31:0] p_read8;
input  [31:0] p_read9;
input  [31:0] p_read10;
input  [31:0] p_read11;
input  [31:0] p_read12;
input  [31:0] p_read13;
input  [31:0] p_read14;
input  [31:0] p_read15;
output  [30:0] ap_return_0;
output  [30:0] ap_return_1;
output  [30:0] ap_return_2;
output  [30:0] ap_return_3;
output  [30:0] ap_return_4;
output  [30:0] ap_return_5;
output  [30:0] ap_return_6;
output  [30:0] ap_return_7;
output  [30:0] ap_return_8;
output  [30:0] ap_return_9;
output  [30:0] ap_return_10;
output  [30:0] ap_return_11;
output  [30:0] ap_return_12;
output  [30:0] ap_return_13;
output  [30:0] ap_return_14;
output  [30:0] ap_return_15;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[30:0] ap_return_0;
reg[30:0] ap_return_1;
reg[30:0] ap_return_2;
reg[30:0] ap_return_3;
reg[30:0] ap_return_4;
reg[30:0] ap_return_5;
reg[30:0] ap_return_6;
reg[30:0] ap_return_7;
reg[30:0] ap_return_8;
reg[30:0] ap_return_9;
reg[30:0] ap_return_10;
reg[30:0] ap_return_11;
reg[30:0] ap_return_12;
reg[30:0] ap_return_13;
reg[30:0] ap_return_14;
reg[30:0] ap_return_15;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1;
wire   [0:0] icmp_ln45_fu_146_p2;
wire   [30:0] trunc_ln42_fu_142_p1;
wire   [0:0] icmp_ln45_1_fu_164_p2;
wire   [30:0] trunc_ln42_1_fu_160_p1;
wire   [0:0] icmp_ln45_2_fu_182_p2;
wire   [30:0] trunc_ln42_2_fu_178_p1;
wire   [0:0] icmp_ln45_3_fu_200_p2;
wire   [30:0] trunc_ln42_3_fu_196_p1;
wire   [0:0] icmp_ln45_4_fu_218_p2;
wire   [30:0] trunc_ln42_4_fu_214_p1;
wire   [0:0] icmp_ln45_5_fu_236_p2;
wire   [30:0] trunc_ln42_5_fu_232_p1;
wire   [0:0] icmp_ln45_6_fu_254_p2;
wire   [30:0] trunc_ln42_6_fu_250_p1;
wire   [0:0] icmp_ln45_7_fu_272_p2;
wire   [30:0] trunc_ln42_7_fu_268_p1;
wire   [0:0] icmp_ln45_8_fu_290_p2;
wire   [30:0] trunc_ln42_8_fu_286_p1;
wire   [0:0] icmp_ln45_9_fu_308_p2;
wire   [30:0] trunc_ln42_9_fu_304_p1;
wire   [0:0] icmp_ln45_10_fu_326_p2;
wire   [30:0] trunc_ln42_10_fu_322_p1;
wire   [0:0] icmp_ln45_11_fu_344_p2;
wire   [30:0] trunc_ln42_11_fu_340_p1;
wire   [0:0] icmp_ln45_12_fu_362_p2;
wire   [30:0] trunc_ln42_12_fu_358_p1;
wire   [0:0] icmp_ln45_13_fu_380_p2;
wire   [30:0] trunc_ln42_13_fu_376_p1;
wire   [0:0] icmp_ln45_14_fu_398_p2;
wire   [30:0] trunc_ln42_14_fu_394_p1;
wire   [0:0] icmp_ln45_15_fu_416_p2;
wire   [30:0] trunc_ln42_15_fu_412_p1;
wire   [30:0] datareg_fu_152_p3;
wire   [30:0] datareg_1_fu_170_p3;
wire   [30:0] datareg_2_fu_188_p3;
wire   [30:0] datareg_3_fu_206_p3;
wire   [30:0] datareg_4_fu_224_p3;
wire   [30:0] datareg_5_fu_242_p3;
wire   [30:0] datareg_6_fu_260_p3;
wire   [30:0] datareg_7_fu_278_p3;
wire   [30:0] datareg_8_fu_296_p3;
wire   [30:0] datareg_9_fu_314_p3;
wire   [30:0] datareg_10_fu_332_p3;
wire   [30:0] datareg_11_fu_350_p3;
wire   [30:0] datareg_12_fu_368_p3;
wire   [30:0] datareg_13_fu_386_p3;
wire   [30:0] datareg_14_fu_404_p3;
wire   [30:0] datareg_15_fu_422_p3;
reg   [30:0] ap_return_0_preg;
reg   [30:0] ap_return_1_preg;
reg   [30:0] ap_return_2_preg;
reg   [30:0] ap_return_3_preg;
reg   [30:0] ap_return_4_preg;
reg   [30:0] ap_return_5_preg;
reg   [30:0] ap_return_6_preg;
reg   [30:0] ap_return_7_preg;
reg   [30:0] ap_return_8_preg;
reg   [30:0] ap_return_9_preg;
reg   [30:0] ap_return_10_preg;
reg   [30:0] ap_return_11_preg;
reg   [30:0] ap_return_12_preg;
reg   [30:0] ap_return_13_preg;
reg   [30:0] ap_return_14_preg;
reg   [30:0] ap_return_15_preg;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_return_0_preg = 31'd0;
#0 ap_return_1_preg = 31'd0;
#0 ap_return_2_preg = 31'd0;
#0 ap_return_3_preg = 31'd0;
#0 ap_return_4_preg = 31'd0;
#0 ap_return_5_preg = 31'd0;
#0 ap_return_6_preg = 31'd0;
#0 ap_return_7_preg = 31'd0;
#0 ap_return_8_preg = 31'd0;
#0 ap_return_9_preg = 31'd0;
#0 ap_return_10_preg = 31'd0;
#0 ap_return_11_preg = 31'd0;
#0 ap_return_12_preg = 31'd0;
#0 ap_return_13_preg = 31'd0;
#0 ap_return_14_preg = 31'd0;
#0 ap_return_15_preg = 31'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_0_preg <= datareg_fu_152_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_10_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_10_preg <= datareg_10_fu_332_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_11_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_11_preg <= datareg_11_fu_350_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_12_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_12_preg <= datareg_12_fu_368_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_13_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_13_preg <= datareg_13_fu_386_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_14_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_14_preg <= datareg_14_fu_404_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_15_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_15_preg <= datareg_15_fu_422_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_1_preg <= datareg_1_fu_170_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_2_preg <= datareg_2_fu_188_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_3_preg <= datareg_3_fu_206_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_4_preg <= datareg_4_fu_224_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_5_preg <= datareg_5_fu_242_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_6_preg <= datareg_6_fu_260_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_7_preg <= datareg_7_fu_278_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_8_preg <= datareg_8_fu_296_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= 31'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_9_preg <= datareg_9_fu_314_p3;
        end
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_0 = datareg_fu_152_p3;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_1 = datareg_1_fu_170_p3;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_10 = datareg_10_fu_332_p3;
    end else begin
        ap_return_10 = ap_return_10_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_11 = datareg_11_fu_350_p3;
    end else begin
        ap_return_11 = ap_return_11_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_12 = datareg_12_fu_368_p3;
    end else begin
        ap_return_12 = ap_return_12_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_13 = datareg_13_fu_386_p3;
    end else begin
        ap_return_13 = ap_return_13_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_14 = datareg_14_fu_404_p3;
    end else begin
        ap_return_14 = ap_return_14_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_15 = datareg_15_fu_422_p3;
    end else begin
        ap_return_15 = ap_return_15_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_2 = datareg_2_fu_188_p3;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_3 = datareg_3_fu_206_p3;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_4 = datareg_4_fu_224_p3;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_5 = datareg_5_fu_242_p3;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_6 = datareg_6_fu_260_p3;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_7 = datareg_7_fu_278_p3;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_8 = datareg_8_fu_296_p3;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_9 = datareg_9_fu_314_p3;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign datareg_10_fu_332_p3 = ((icmp_ln45_10_fu_326_p2[0:0] == 1'b1) ? trunc_ln42_10_fu_322_p1 : 31'd0);

assign datareg_11_fu_350_p3 = ((icmp_ln45_11_fu_344_p2[0:0] == 1'b1) ? trunc_ln42_11_fu_340_p1 : 31'd0);

assign datareg_12_fu_368_p3 = ((icmp_ln45_12_fu_362_p2[0:0] == 1'b1) ? trunc_ln42_12_fu_358_p1 : 31'd0);

assign datareg_13_fu_386_p3 = ((icmp_ln45_13_fu_380_p2[0:0] == 1'b1) ? trunc_ln42_13_fu_376_p1 : 31'd0);

assign datareg_14_fu_404_p3 = ((icmp_ln45_14_fu_398_p2[0:0] == 1'b1) ? trunc_ln42_14_fu_394_p1 : 31'd0);

assign datareg_15_fu_422_p3 = ((icmp_ln45_15_fu_416_p2[0:0] == 1'b1) ? trunc_ln42_15_fu_412_p1 : 31'd0);

assign datareg_1_fu_170_p3 = ((icmp_ln45_1_fu_164_p2[0:0] == 1'b1) ? trunc_ln42_1_fu_160_p1 : 31'd0);

assign datareg_2_fu_188_p3 = ((icmp_ln45_2_fu_182_p2[0:0] == 1'b1) ? trunc_ln42_2_fu_178_p1 : 31'd0);

assign datareg_3_fu_206_p3 = ((icmp_ln45_3_fu_200_p2[0:0] == 1'b1) ? trunc_ln42_3_fu_196_p1 : 31'd0);

assign datareg_4_fu_224_p3 = ((icmp_ln45_4_fu_218_p2[0:0] == 1'b1) ? trunc_ln42_4_fu_214_p1 : 31'd0);

assign datareg_5_fu_242_p3 = ((icmp_ln45_5_fu_236_p2[0:0] == 1'b1) ? trunc_ln42_5_fu_232_p1 : 31'd0);

assign datareg_6_fu_260_p3 = ((icmp_ln45_6_fu_254_p2[0:0] == 1'b1) ? trunc_ln42_6_fu_250_p1 : 31'd0);

assign datareg_7_fu_278_p3 = ((icmp_ln45_7_fu_272_p2[0:0] == 1'b1) ? trunc_ln42_7_fu_268_p1 : 31'd0);

assign datareg_8_fu_296_p3 = ((icmp_ln45_8_fu_290_p2[0:0] == 1'b1) ? trunc_ln42_8_fu_286_p1 : 31'd0);

assign datareg_9_fu_314_p3 = ((icmp_ln45_9_fu_308_p2[0:0] == 1'b1) ? trunc_ln42_9_fu_304_p1 : 31'd0);

assign datareg_fu_152_p3 = ((icmp_ln45_fu_146_p2[0:0] == 1'b1) ? trunc_ln42_fu_142_p1 : 31'd0);

assign icmp_ln45_10_fu_326_p2 = (($signed(p_read10) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_11_fu_344_p2 = (($signed(p_read11) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_12_fu_362_p2 = (($signed(p_read12) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_13_fu_380_p2 = (($signed(p_read13) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_14_fu_398_p2 = (($signed(p_read14) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_15_fu_416_p2 = (($signed(p_read15) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_1_fu_164_p2 = (($signed(p_read1) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_2_fu_182_p2 = (($signed(p_read2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_3_fu_200_p2 = (($signed(p_read3) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_4_fu_218_p2 = (($signed(p_read4) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_5_fu_236_p2 = (($signed(p_read5) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_6_fu_254_p2 = (($signed(p_read6) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_7_fu_272_p2 = (($signed(p_read7) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_8_fu_290_p2 = (($signed(p_read8) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_9_fu_308_p2 = (($signed(p_read9) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_146_p2 = (($signed(p_read) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign trunc_ln42_10_fu_322_p1 = p_read10[30:0];

assign trunc_ln42_11_fu_340_p1 = p_read11[30:0];

assign trunc_ln42_12_fu_358_p1 = p_read12[30:0];

assign trunc_ln42_13_fu_376_p1 = p_read13[30:0];

assign trunc_ln42_14_fu_394_p1 = p_read14[30:0];

assign trunc_ln42_15_fu_412_p1 = p_read15[30:0];

assign trunc_ln42_1_fu_160_p1 = p_read1[30:0];

assign trunc_ln42_2_fu_178_p1 = p_read2[30:0];

assign trunc_ln42_3_fu_196_p1 = p_read3[30:0];

assign trunc_ln42_4_fu_214_p1 = p_read4[30:0];

assign trunc_ln42_5_fu_232_p1 = p_read5[30:0];

assign trunc_ln42_6_fu_250_p1 = p_read6[30:0];

assign trunc_ln42_7_fu_268_p1 = p_read7[30:0];

assign trunc_ln42_8_fu_286_p1 = p_read8[30:0];

assign trunc_ln42_9_fu_304_p1 = p_read9[30:0];

assign trunc_ln42_fu_142_p1 = p_read[30:0];

endmodule //myproject_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s
