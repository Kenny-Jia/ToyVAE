-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    data_6_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    data_7_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    data_8_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    data_9_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    data_10_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    data_11_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    data_12_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    data_13_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    data_14_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    data_15_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (30 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (30 downto 0) );
end;


architecture behav of relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal icmp_ln1494_fu_148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_fu_144_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1494_1_fu_166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_1_fu_162_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1494_2_fu_184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_2_fu_180_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1494_3_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_3_fu_198_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1494_4_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_4_fu_216_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1494_5_fu_238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_5_fu_234_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1494_6_fu_256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_6_fu_252_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1494_7_fu_274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_7_fu_270_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1494_8_fu_292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_8_fu_288_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1494_9_fu_310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_9_fu_306_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1494_10_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_10_fu_324_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1494_11_fu_346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_11_fu_342_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1494_12_fu_364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_12_fu_360_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1494_13_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_13_fu_378_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1494_14_fu_400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_14_fu_396_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1494_15_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_15_fu_414_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln45_fu_154_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln45_1_fu_172_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln45_2_fu_190_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln45_3_fu_208_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln45_4_fu_226_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln45_5_fu_244_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln45_6_fu_262_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln45_7_fu_280_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln45_8_fu_298_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln45_9_fu_316_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln45_10_fu_334_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln45_11_fu_352_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln45_12_fu_370_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln45_13_fu_388_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln45_14_fu_406_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln45_15_fu_424_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_2_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_3_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_4_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_5_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_6_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_7_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_8_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_9_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_10_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_11_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_12_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_13_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_14_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_return_15_preg : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_0_preg <= select_ln45_fu_154_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_10_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_10_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_10_preg <= select_ln45_10_fu_334_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_11_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_11_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_11_preg <= select_ln45_11_fu_352_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_12_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_12_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_12_preg <= select_ln45_12_fu_370_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_13_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_13_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_13_preg <= select_ln45_13_fu_388_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_14_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_14_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_14_preg <= select_ln45_14_fu_406_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_15_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_15_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_15_preg <= select_ln45_15_fu_424_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_1_preg <= select_ln45_1_fu_172_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_2_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_2_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_2_preg <= select_ln45_2_fu_190_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_3_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_3_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_3_preg <= select_ln45_3_fu_208_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_4_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_4_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_4_preg <= select_ln45_4_fu_226_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_5_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_5_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_5_preg <= select_ln45_5_fu_244_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_6_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_6_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_6_preg <= select_ln45_6_fu_262_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_7_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_7_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_7_preg <= select_ln45_7_fu_280_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_8_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_8_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_8_preg <= select_ln45_8_fu_298_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_9_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_9_preg <= ap_const_lv31_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_9_preg <= select_ln45_9_fu_316_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, select_ln45_fu_154_p3, ap_return_0_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_0 <= select_ln45_fu_154_p3;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, select_ln45_1_fu_172_p3, ap_return_1_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_1 <= select_ln45_1_fu_172_p3;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    ap_return_10_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, select_ln45_10_fu_334_p3, ap_return_10_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_10 <= select_ln45_10_fu_334_p3;
        else 
            ap_return_10 <= ap_return_10_preg;
        end if; 
    end process;


    ap_return_11_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, select_ln45_11_fu_352_p3, ap_return_11_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_11 <= select_ln45_11_fu_352_p3;
        else 
            ap_return_11 <= ap_return_11_preg;
        end if; 
    end process;


    ap_return_12_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, select_ln45_12_fu_370_p3, ap_return_12_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_12 <= select_ln45_12_fu_370_p3;
        else 
            ap_return_12 <= ap_return_12_preg;
        end if; 
    end process;


    ap_return_13_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, select_ln45_13_fu_388_p3, ap_return_13_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_13 <= select_ln45_13_fu_388_p3;
        else 
            ap_return_13 <= ap_return_13_preg;
        end if; 
    end process;


    ap_return_14_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, select_ln45_14_fu_406_p3, ap_return_14_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_14 <= select_ln45_14_fu_406_p3;
        else 
            ap_return_14 <= ap_return_14_preg;
        end if; 
    end process;


    ap_return_15_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, select_ln45_15_fu_424_p3, ap_return_15_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_15 <= select_ln45_15_fu_424_p3;
        else 
            ap_return_15 <= ap_return_15_preg;
        end if; 
    end process;


    ap_return_2_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, select_ln45_2_fu_190_p3, ap_return_2_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_2 <= select_ln45_2_fu_190_p3;
        else 
            ap_return_2 <= ap_return_2_preg;
        end if; 
    end process;


    ap_return_3_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, select_ln45_3_fu_208_p3, ap_return_3_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_3 <= select_ln45_3_fu_208_p3;
        else 
            ap_return_3 <= ap_return_3_preg;
        end if; 
    end process;


    ap_return_4_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, select_ln45_4_fu_226_p3, ap_return_4_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_4 <= select_ln45_4_fu_226_p3;
        else 
            ap_return_4 <= ap_return_4_preg;
        end if; 
    end process;


    ap_return_5_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, select_ln45_5_fu_244_p3, ap_return_5_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_5 <= select_ln45_5_fu_244_p3;
        else 
            ap_return_5 <= ap_return_5_preg;
        end if; 
    end process;


    ap_return_6_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, select_ln45_6_fu_262_p3, ap_return_6_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_6 <= select_ln45_6_fu_262_p3;
        else 
            ap_return_6 <= ap_return_6_preg;
        end if; 
    end process;


    ap_return_7_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, select_ln45_7_fu_280_p3, ap_return_7_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_7 <= select_ln45_7_fu_280_p3;
        else 
            ap_return_7 <= ap_return_7_preg;
        end if; 
    end process;


    ap_return_8_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, select_ln45_8_fu_298_p3, ap_return_8_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_8 <= select_ln45_8_fu_298_p3;
        else 
            ap_return_8 <= ap_return_8_preg;
        end if; 
    end process;


    ap_return_9_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, select_ln45_9_fu_316_p3, ap_return_9_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_9 <= select_ln45_9_fu_316_p3;
        else 
            ap_return_9 <= ap_return_9_preg;
        end if; 
    end process;

    icmp_ln1494_10_fu_328_p2 <= "1" when (signed(data_10_V_read) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1494_11_fu_346_p2 <= "1" when (signed(data_11_V_read) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1494_12_fu_364_p2 <= "1" when (signed(data_12_V_read) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1494_13_fu_382_p2 <= "1" when (signed(data_13_V_read) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1494_14_fu_400_p2 <= "1" when (signed(data_14_V_read) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1494_15_fu_418_p2 <= "1" when (signed(data_15_V_read) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1494_1_fu_166_p2 <= "1" when (signed(data_1_V_read) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1494_2_fu_184_p2 <= "1" when (signed(data_2_V_read) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1494_3_fu_202_p2 <= "1" when (signed(data_3_V_read) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1494_4_fu_220_p2 <= "1" when (signed(data_4_V_read) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1494_5_fu_238_p2 <= "1" when (signed(data_5_V_read) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1494_6_fu_256_p2 <= "1" when (signed(data_6_V_read) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1494_7_fu_274_p2 <= "1" when (signed(data_7_V_read) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1494_8_fu_292_p2 <= "1" when (signed(data_8_V_read) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1494_9_fu_310_p2 <= "1" when (signed(data_9_V_read) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1494_fu_148_p2 <= "1" when (signed(data_0_V_read) > signed(ap_const_lv32_0)) else "0";
    select_ln45_10_fu_334_p3 <= 
        trunc_ln1494_10_fu_324_p1 when (icmp_ln1494_10_fu_328_p2(0) = '1') else 
        ap_const_lv31_0;
    select_ln45_11_fu_352_p3 <= 
        trunc_ln1494_11_fu_342_p1 when (icmp_ln1494_11_fu_346_p2(0) = '1') else 
        ap_const_lv31_0;
    select_ln45_12_fu_370_p3 <= 
        trunc_ln1494_12_fu_360_p1 when (icmp_ln1494_12_fu_364_p2(0) = '1') else 
        ap_const_lv31_0;
    select_ln45_13_fu_388_p3 <= 
        trunc_ln1494_13_fu_378_p1 when (icmp_ln1494_13_fu_382_p2(0) = '1') else 
        ap_const_lv31_0;
    select_ln45_14_fu_406_p3 <= 
        trunc_ln1494_14_fu_396_p1 when (icmp_ln1494_14_fu_400_p2(0) = '1') else 
        ap_const_lv31_0;
    select_ln45_15_fu_424_p3 <= 
        trunc_ln1494_15_fu_414_p1 when (icmp_ln1494_15_fu_418_p2(0) = '1') else 
        ap_const_lv31_0;
    select_ln45_1_fu_172_p3 <= 
        trunc_ln1494_1_fu_162_p1 when (icmp_ln1494_1_fu_166_p2(0) = '1') else 
        ap_const_lv31_0;
    select_ln45_2_fu_190_p3 <= 
        trunc_ln1494_2_fu_180_p1 when (icmp_ln1494_2_fu_184_p2(0) = '1') else 
        ap_const_lv31_0;
    select_ln45_3_fu_208_p3 <= 
        trunc_ln1494_3_fu_198_p1 when (icmp_ln1494_3_fu_202_p2(0) = '1') else 
        ap_const_lv31_0;
    select_ln45_4_fu_226_p3 <= 
        trunc_ln1494_4_fu_216_p1 when (icmp_ln1494_4_fu_220_p2(0) = '1') else 
        ap_const_lv31_0;
    select_ln45_5_fu_244_p3 <= 
        trunc_ln1494_5_fu_234_p1 when (icmp_ln1494_5_fu_238_p2(0) = '1') else 
        ap_const_lv31_0;
    select_ln45_6_fu_262_p3 <= 
        trunc_ln1494_6_fu_252_p1 when (icmp_ln1494_6_fu_256_p2(0) = '1') else 
        ap_const_lv31_0;
    select_ln45_7_fu_280_p3 <= 
        trunc_ln1494_7_fu_270_p1 when (icmp_ln1494_7_fu_274_p2(0) = '1') else 
        ap_const_lv31_0;
    select_ln45_8_fu_298_p3 <= 
        trunc_ln1494_8_fu_288_p1 when (icmp_ln1494_8_fu_292_p2(0) = '1') else 
        ap_const_lv31_0;
    select_ln45_9_fu_316_p3 <= 
        trunc_ln1494_9_fu_306_p1 when (icmp_ln1494_9_fu_310_p2(0) = '1') else 
        ap_const_lv31_0;
    select_ln45_fu_154_p3 <= 
        trunc_ln1494_fu_144_p1 when (icmp_ln1494_fu_148_p2(0) = '1') else 
        ap_const_lv31_0;
    trunc_ln1494_10_fu_324_p1 <= data_10_V_read(31 - 1 downto 0);
    trunc_ln1494_11_fu_342_p1 <= data_11_V_read(31 - 1 downto 0);
    trunc_ln1494_12_fu_360_p1 <= data_12_V_read(31 - 1 downto 0);
    trunc_ln1494_13_fu_378_p1 <= data_13_V_read(31 - 1 downto 0);
    trunc_ln1494_14_fu_396_p1 <= data_14_V_read(31 - 1 downto 0);
    trunc_ln1494_15_fu_414_p1 <= data_15_V_read(31 - 1 downto 0);
    trunc_ln1494_1_fu_162_p1 <= data_1_V_read(31 - 1 downto 0);
    trunc_ln1494_2_fu_180_p1 <= data_2_V_read(31 - 1 downto 0);
    trunc_ln1494_3_fu_198_p1 <= data_3_V_read(31 - 1 downto 0);
    trunc_ln1494_4_fu_216_p1 <= data_4_V_read(31 - 1 downto 0);
    trunc_ln1494_5_fu_234_p1 <= data_5_V_read(31 - 1 downto 0);
    trunc_ln1494_6_fu_252_p1 <= data_6_V_read(31 - 1 downto 0);
    trunc_ln1494_7_fu_270_p1 <= data_7_V_read(31 - 1 downto 0);
    trunc_ln1494_8_fu_288_p1 <= data_8_V_read(31 - 1 downto 0);
    trunc_ln1494_9_fu_306_p1 <= data_9_V_read(31 - 1 downto 0);
    trunc_ln1494_fu_144_p1 <= data_0_V_read(31 - 1 downto 0);
end behav;
