-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    inputs_V_ap_vld : IN STD_LOGIC;
    inputs_V : IN STD_LOGIC_VECTOR (1823 downto 0);
    layer8_out_0_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer8_out_0_V_ap_vld : OUT STD_LOGIC;
    layer8_out_1_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer8_out_1_V_ap_vld : OUT STD_LOGIC;
    layer8_out_2_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer8_out_2_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2104-2-e,HLS_INPUT_CLOCK=25.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=16.015250,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=4692,HLS_SYN_FF=2339,HLS_SYN_LUT=126637,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1824_lc_1 : STD_LOGIC_VECTOR (1823 downto

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal inputs_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal inputs_V_preg : STD_LOGIC_VECTOR (1823 downto
    signal inputs_V_in_sig : STD_LOGIC_VECTOR (1823 downto 0);
    signal inputs_V_ap_vld_preg : STD_LOGIC := '0';
    signal inputs_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal layer5_out_0_V_reg_666 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer5_out_1_V_reg_671 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer5_out_2_V_reg_676 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer5_out_3_V_reg_681 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer5_out_4_V_reg_686 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer5_out_5_V_reg_691 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer5_out_6_V_reg_696 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer5_out_7_V_reg_701 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer5_out_8_V_reg_706 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer5_out_9_V_reg_711 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer5_out_10_V_reg_716 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer5_out_11_V_reg_721 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer5_out_12_V_reg_726 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer5_out_13_V_reg_731 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer5_out_14_V_reg_736 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer5_out_15_V_reg_741 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_ready : STD_LOGIC;
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_9 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_10 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_11 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_12 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_13 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_14 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_15 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_16 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_17 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_18 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_19 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_20 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_21 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_22 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_23 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_24 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_25 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_26 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_27 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_28 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_29 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_30 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_31 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_ready : STD_LOGIC;
    signal call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_9 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_10 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_11 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_12 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_13 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_14 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_15 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret4_dense_latency_ap_fixed_ap_fixed_32_16_5_3_0_config8_0_0_0_0_fu_111_ap_ready : STD_LOGIC;
    signal call_ret4_dense_latency_ap_fixed_ap_fixed_32_16_5_3_0_config8_0_0_0_0_fu_111_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret4_dense_latency_ap_fixed_ap_fixed_32_16_5_3_0_config8_0_0_0_0_fu_111_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret4_dense_latency_ap_fixed_ap_fixed_32_16_5_3_0_config8_0_0_0_0_fu_111_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_ready : STD_LOGIC;
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_9 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_10 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_11 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_12 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_13 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_14 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_15 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_16 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_17 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_18 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_19 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_20 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_21 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_22 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_23 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_24 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_25 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_26 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_27 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_28 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_29 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_30 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_31 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_ready : STD_LOGIC;
    signal call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_9 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_10 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_11 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_12 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_13 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_14 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_15 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0 IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_V_read : IN STD_LOGIC_VECTOR (1823 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0 IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_17_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_20_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_21_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_22_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_23_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_24_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_25_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_26_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_27_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_28_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_29_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_30_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_31_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dense_latency_ap_fixed_ap_fixed_32_16_5_3_0_config8_0_0_0_0 IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_17_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_20_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_21_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_22_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_23_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_24_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_25_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_26_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_27_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_28_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_29_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_30_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_31_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69 : component dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0
    port map (
        ap_ready => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_ready,
        data_V_read => inputs_V_in_sig,
        ap_return_0 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_0,
        ap_return_1 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_1,
        ap_return_2 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_2,
        ap_return_3 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_3,
        ap_return_4 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_4,
        ap_return_5 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_5,
        ap_return_6 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_6,
        ap_return_7 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_7,
        ap_return_8 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_8,
        ap_return_9 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_9,
        ap_return_10 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_10,
        ap_return_11 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_11,
        ap_return_12 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_12,
        ap_return_13 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_13,
        ap_return_14 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_14,
        ap_return_15 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_15,
        ap_return_16 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_16,
        ap_return_17 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_17,
        ap_return_18 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_18,
        ap_return_19 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_19,
        ap_return_20 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_20,
        ap_return_21 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_21,
        ap_return_22 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_22,
        ap_return_23 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_23,
        ap_return_24 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_24,
        ap_return_25 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_25,
        ap_return_26 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_26,
        ap_return_27 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_27,
        ap_return_28 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_28,
        ap_return_29 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_29,
        ap_return_30 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_30,
        ap_return_31 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_31);

    call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75 : component dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0
    port map (
        ap_ready => call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_ready,
        data_0_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_0,
        data_1_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_1,
        data_2_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_2,
        data_3_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_3,
        data_4_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_4,
        data_5_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_5,
        data_6_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_6,
        data_7_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_7,
        data_8_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_8,
        data_9_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_9,
        data_10_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_10,
        data_11_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_11,
        data_12_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_12,
        data_13_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_13,
        data_14_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_14,
        data_15_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_15,
        data_16_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_16,
        data_17_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_17,
        data_18_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_18,
        data_19_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_19,
        data_20_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_20,
        data_21_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_21,
        data_22_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_22,
        data_23_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_23,
        data_24_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_24,
        data_25_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_25,
        data_26_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_26,
        data_27_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_27,
        data_28_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_28,
        data_29_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_29,
        data_30_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_30,
        data_31_V_read => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_31,
        ap_return_0 => call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_0,
        ap_return_1 => call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_1,
        ap_return_2 => call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_2,
        ap_return_3 => call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_3,
        ap_return_4 => call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_4,
        ap_return_5 => call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_5,
        ap_return_6 => call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_6,
        ap_return_7 => call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_7,
        ap_return_8 => call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_8,
        ap_return_9 => call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_9,
        ap_return_10 => call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_10,
        ap_return_11 => call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_11,
        ap_return_12 => call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_12,
        ap_return_13 => call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_13,
        ap_return_14 => call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_14,
        ap_return_15 => call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_15);

    call_ret4_dense_latency_ap_fixed_ap_fixed_32_16_5_3_0_config8_0_0_0_0_fu_111 : component dense_latency_ap_fixed_ap_fixed_32_16_5_3_0_config8_0_0_0_0
    port map (
        ap_ready => call_ret4_dense_latency_ap_fixed_ap_fixed_32_16_5_3_0_config8_0_0_0_0_fu_111_ap_ready,
        data_0_V_read => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_0,
        data_1_V_read => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_1,
        data_2_V_read => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_2,
        data_3_V_read => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_3,
        data_4_V_read => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_4,
        data_5_V_read => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_5,
        data_6_V_read => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_6,
        data_7_V_read => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_7,
        data_8_V_read => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_8,
        data_9_V_read => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_9,
        data_10_V_read => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_10,
        data_11_V_read => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_11,
        data_12_V_read => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_12,
        data_13_V_read => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_13,
        data_14_V_read => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_14,
        data_15_V_read => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_15,
        ap_return_0 => call_ret4_dense_latency_ap_fixed_ap_fixed_32_16_5_3_0_config8_0_0_0_0_fu_111_ap_return_0,
        ap_return_1 => call_ret4_dense_latency_ap_fixed_ap_fixed_32_16_5_3_0_config8_0_0_0_0_fu_111_ap_return_1,
        ap_return_2 => call_ret4_dense_latency_ap_fixed_ap_fixed_32_16_5_3_0_config8_0_0_0_0_fu_111_ap_return_2);

    call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131 : component relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s
    port map (
        ap_ready => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_ready,
        data_0_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_0,
        data_1_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_1,
        data_2_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_2,
        data_3_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_3,
        data_4_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_4,
        data_5_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_5,
        data_6_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_6,
        data_7_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_7,
        data_8_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_8,
        data_9_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_9,
        data_10_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_10,
        data_11_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_11,
        data_12_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_12,
        data_13_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_13,
        data_14_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_14,
        data_15_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_15,
        data_16_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_16,
        data_17_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_17,
        data_18_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_18,
        data_19_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_19,
        data_20_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_20,
        data_21_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_21,
        data_22_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_22,
        data_23_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_23,
        data_24_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_24,
        data_25_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_25,
        data_26_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_26,
        data_27_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_27,
        data_28_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_28,
        data_29_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_29,
        data_30_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_30,
        data_31_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_69_ap_return_31,
        ap_return_0 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_0,
        ap_return_1 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_1,
        ap_return_2 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_2,
        ap_return_3 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_3,
        ap_return_4 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_4,
        ap_return_5 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_5,
        ap_return_6 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_6,
        ap_return_7 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_7,
        ap_return_8 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_8,
        ap_return_9 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_9,
        ap_return_10 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_10,
        ap_return_11 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_11,
        ap_return_12 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_12,
        ap_return_13 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_13,
        ap_return_14 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_14,
        ap_return_15 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_15,
        ap_return_16 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_16,
        ap_return_17 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_17,
        ap_return_18 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_18,
        ap_return_19 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_19,
        ap_return_20 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_20,
        ap_return_21 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_21,
        ap_return_22 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_22,
        ap_return_23 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_23,
        ap_return_24 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_24,
        ap_return_25 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_25,
        ap_return_26 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_26,
        ap_return_27 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_27,
        ap_return_28 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_28,
        ap_return_29 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_29,
        ap_return_30 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_30,
        ap_return_31 => call_ret1_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config4_s_fu_131_ap_return_31);

    call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167 : component relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s
    port map (
        ap_ready => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_ready,
        data_0_V_read => layer5_out_0_V_reg_666,
        data_1_V_read => layer5_out_1_V_reg_671,
        data_2_V_read => layer5_out_2_V_reg_676,
        data_3_V_read => layer5_out_3_V_reg_681,
        data_4_V_read => layer5_out_4_V_reg_686,
        data_5_V_read => layer5_out_5_V_reg_691,
        data_6_V_read => layer5_out_6_V_reg_696,
        data_7_V_read => layer5_out_7_V_reg_701,
        data_8_V_read => layer5_out_8_V_reg_706,
        data_9_V_read => layer5_out_9_V_reg_711,
        data_10_V_read => layer5_out_10_V_reg_716,
        data_11_V_read => layer5_out_11_V_reg_721,
        data_12_V_read => layer5_out_12_V_reg_726,
        data_13_V_read => layer5_out_13_V_reg_731,
        data_14_V_read => layer5_out_14_V_reg_736,
        data_15_V_read => layer5_out_15_V_reg_741,
        ap_return_0 => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_0,
        ap_return_1 => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_1,
        ap_return_2 => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_2,
        ap_return_3 => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_3,
        ap_return_4 => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_4,
        ap_return_5 => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_5,
        ap_return_6 => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_6,
        ap_return_7 => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_7,
        ap_return_8 => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_8,
        ap_return_9 => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_9,
        ap_return_10 => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_10,
        ap_return_11 => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_11,
        ap_return_12 => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_12,
        ap_return_13 => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_13,
        ap_return_14 => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_14,
        ap_return_15 => call_ret3_relu_ap_fixed_32_16_5_3_0_ap_fixed_32_16_4_0_0_ReLU_config7_s_fu_167_ap_return_15);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    inputs_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                inputs_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    inputs_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (inputs_V_ap_vld = ap_const_logic_1))) then 
                    inputs_V_ap_vld_preg <= inputs_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    inputs_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                inputs_V_preg <= ap_const_lv1824_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (inputs_V_ap_vld = ap_const_logic_1))) then 
                    inputs_V_preg <= inputs_V;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                layer5_out_0_V_reg_666 <= call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_0;
                layer5_out_10_V_reg_716 <= call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_10;
                layer5_out_11_V_reg_721 <= call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_11;
                layer5_out_12_V_reg_726 <= call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_12;
                layer5_out_13_V_reg_731 <= call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_13;
                layer5_out_14_V_reg_736 <= call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_14;
                layer5_out_15_V_reg_741 <= call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_15;
                layer5_out_1_V_reg_671 <= call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_1;
                layer5_out_2_V_reg_676 <= call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_2;
                layer5_out_3_V_reg_681 <= call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_3;
                layer5_out_4_V_reg_686 <= call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_4;
                layer5_out_5_V_reg_691 <= call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_5;
                layer5_out_6_V_reg_696 <= call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_6;
                layer5_out_7_V_reg_701 <= call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_7;
                layer5_out_8_V_reg_706 <= call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_8;
                layer5_out_9_V_reg_711 <= call_ret2_dense_latency_ap_fixed_ap_fixed_config5_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_9;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, inputs_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (inputs_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, inputs_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (inputs_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, inputs_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (inputs_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, inputs_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (inputs_V_ap_vld_in_sig = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    inputs_V_ap_vld_in_sig_assign_proc : process(inputs_V_ap_vld, inputs_V_ap_vld_preg)
    begin
        if ((inputs_V_ap_vld = ap_const_logic_1)) then 
            inputs_V_ap_vld_in_sig <= inputs_V_ap_vld;
        else 
            inputs_V_ap_vld_in_sig <= inputs_V_ap_vld_preg;
        end if; 
    end process;


    inputs_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, inputs_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inputs_V_blk_n <= inputs_V_ap_vld;
        else 
            inputs_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inputs_V_in_sig_assign_proc : process(inputs_V_ap_vld, inputs_V, inputs_V_preg)
    begin
        if ((inputs_V_ap_vld = ap_const_logic_1)) then 
            inputs_V_in_sig <= inputs_V;
        else 
            inputs_V_in_sig <= inputs_V_preg;
        end if; 
    end process;

    layer8_out_0_V <= call_ret4_dense_latency_ap_fixed_ap_fixed_32_16_5_3_0_config8_0_0_0_0_fu_111_ap_return_0;

    layer8_out_0_V_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer8_out_0_V_ap_vld <= ap_const_logic_1;
        else 
            layer8_out_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer8_out_1_V <= call_ret4_dense_latency_ap_fixed_ap_fixed_32_16_5_3_0_config8_0_0_0_0_fu_111_ap_return_1;

    layer8_out_1_V_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer8_out_1_V_ap_vld <= ap_const_logic_1;
        else 
            layer8_out_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer8_out_2_V <= call_ret4_dense_latency_ap_fixed_ap_fixed_32_16_5_3_0_config8_0_0_0_0_fu_111_ap_return_2;

    layer8_out_2_V_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer8_out_2_V_ap_vld <= ap_const_logic_1;
        else 
            layer8_out_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
